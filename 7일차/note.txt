Date : 2022/08/09

[else 사용]
▶︎ else는 if 조건문 뒤에 오며, 단독으로 사용❌
▶︎ 조건식이 True이면 if 본문이 실행, False이면 else 본문이 실행.
if 조건식:
     코드1
else:
     코드2

[조건부 표현식]
• conditional expression
▶︎ 변수 = 값 if 조건문 else 값 형식으로 축약한 문법.
>>> y = True if 1 > 2 else False
>>> y
False


[조건식이 아닌 값의 취급]
• True로 취급: 0이 아닌 숫자, 내용이 있는 문자열, 리스트, 튜플, 딕셔너리, 세트
• False로 취급: 0, None, 비어 있는 문자열, 리스트, 튜플, 딕셔너리, 세트
▶︎ 즉, 값 자체가 있으면 if는 동작함!

[elif/ 참, 거짓의 한계]
• 두 가지 이상의 다양한 상황이 발생시
• elif는 조건식을 여러 개 지정할 수 있게 해줌.
• else if라는 뜻.
• 단독으로 사용❌
if 조건식:
    코드1
elif 조건식: # elif는 여러번 사용 가능.
    코드2
else: # else는 항상 마지막.
    코드3

if 조건문만 사용할 때와 elif를 사용할 때의 차이점?
※ if 조건문 뒤에 elif가 연결되어 있을 때는 첫 번째 if의 조건식이 만족하면 뒤에 오는 elif의 조건식은 검사하지 않고 그냥 건너뜀.
⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️
a, b, c = 10, 20, 30
 
if a == 10:        # 조건식이 참
    print('10')    # 출력
if b == 20:        # 조건식이 참
    print('20')    # 출력
if c == 30:        # 조건식이 참
    print('30')    # 출력

if a == 10:        # 조건식이 참
    print('10')    # 출력 (여기서 조건문은 끝.)
elif b == 20:      # 조건식을 검사하지 않고 건너뜀
    print('20')
elif c == 30:      # 조건식을 검사하지 않고 건너뜀
    print('30')