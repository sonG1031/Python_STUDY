Date : 2022/11/29



튜플은 값의 정보를 구하는 index, count 메서드만 사용할 수 있습니다.

리스트[len(리스트):] = [값]        # 리스트 끝에 값이 한 개 들어있는 리스트 추가
                                   # 리스트.append(값)과 같음
리스트[len(리스트):] = [값, 값]    # 리스트 끝에 다른 리스트 연결
                                   # 리스트.extend([값, 값])과 같음
del 리스트[인덱스]    # 특정 인덱스의 값 삭제, 리스트.pop(인덱스)와 같음
del 리스트[:]   # 시작 인덱스와 끝 인덱스를 생략하여 리스트의 모든 값을 삭제, 리스트.clear()와 같음


변경이 불가능한 튜플은 왜 사용하나요?
리스트는 언제든지 요소를 추가하기 위해 실제 데이터보다 더 큰 메모리을 사용합니다. 
하지만 튜플은 요소를 변경하지 않으므로 고정된 메모리 공간을 사용합니다. 또한, 튜플이 리스트보다 구조가 간단하므로 속도가 훨씬 빠릅니다. 
따라서 요소가 변경되지 않는 곳에는 튜플을 사용하면 메모리를 아낄 수 있고 성능도 높일 수 있습니다.


<딕셔너리 응용>

    - setdefault: 키-값 쌍 추가(값의 기본갑은 None)
      setdefault(키), setdefault(키, 값)
    * setdefault는 키-값 쌍 추가만 할 수 있고, 이미 들어있는 키의 값은 수정할 수 없습니다.

    - update: 키의 값 수정, 키가 없으면 키-값 쌍 추가
    update(키=값), 키=값 쌍 여러 개를 콤마로 구분해서 넣어주면 값을 한꺼번에 수정할 수 있습니다.
    * 키=값 형태는 키가 문자열일 때만 사용할 수 있습니다. 숫자인 경우 update({키: 값}), update([키, 값]), update((키, 값)), update(반복가능한객체).

    - pop: 딕셔너리에서 특정 키-값 쌍을 삭제한 뒤 삭제한 값을 반환.
      pop(키), pop(키, 기본값) -> 키가 없을때 기본값 반환.
    * pop 대신 del로 특정 키-값 쌍을 삭제할 수도 있습니다. del dict[key]
    - popitem() : 마지막 키-값 쌍을 삭제.
    - clear(): 모든 키-값 쌍을 삭제.
    
    - get(키): 딕셔너리에서 특정 키의 값을 가져옵니다. 
      get(키, 기본값): 키가 없을 때는 기본값을 반환.
    
    - items: 키-값 쌍을 모두 가져옴
    - keys: 키를 모두 가져옴
    - values: 값을 모두 가져옴

    - dict.fromkeys(리스트): 리스트의 요소를 키로, 값은 모두 None으로 저장된 딕셔너리를 생성함.
      dict.fromkeys(키리스트, 값): 해당 값이 키의 값으로 저장.
    
    없는 키에 접근했을 경우 에러가 발생하지 않게 하는법!
    - defaultdict(기본값생성함수)
    >>> from collections import defaultdict    # collections 모듈에서 defaultdict를 가져옴
    >>> y = defaultdict(int)
    >>> y['z']
    0

    [딕셔너리 표현식]
    - {키: 값 for 키, 값 in 딕셔너리}
    - dict({키: 값 for 키, 값 in 딕셔너리})
    딕셔너리는 특정 키를 삭제하는 pop 메서드만 제공할 뿐 특정 값을 삭제하는 메서드는 제공하지 않습니다.
    딕셔너리 표현식은 딕셔너리에서 특정 값을 찾아서 삭제할 때 유용!
    - {키: 값 for 키, 값 in 딕셔너리 if 조건식}
    - dict({키: 값 for 키, 값 in 딕셔너리 if 조건식})

    중첩 딕셔너리는 계층형 데이터를 저장할 때 유용!
    중첩 딕셔너리에 접근하려면 [ ](대괄호)를 단계만큼 붙이고 키를 지정.

    딕셔너리 x와 y를 완전히 두 개로 만들려면 copy 메서드로 모든 키-값 쌍을 복사해야함.
    중첩 딕셔너리를 완전히 복사하려면 copy 메서드 대신 copy 모듈의 deepcopy 함수를 사용해야함.