Date. 2023/02/14


내장 함수(built-in function) : input, print 등의 참조없이 사용할 수  있는 함수
내장 함수만으로는 할 수 있는게 별로 없습니다. 그래서 좀 더 복잡한 프로그램을 만들려면 파이썬의 모듈과 패키지를 사용해야 편하다!


모듈(module) : 각종 변수, 함수, 클래스를 담고 있는 파일
패키지(package) : 여러 모듈을 묶은 것, 디렉토리 느낌?
파이썬을 설치할 때 다양한 모듈과 패키지가 기본으로 설치됩니다.

[참고 | 모듈, 패키지, 라이브러리]
▶︎ 모듈: 특정 기능을 .py 파일 단위로 작성한 것입니다.
▶︎ 패키지: 특정 기능과 관련된 여러 모듈을 묶은 것입니다. 패키지는 모듈에 네임스페이스(namespace, 이름공간)를 제공합니다.
▶︎ 파이썬 표준 라이브러리: 파이썬에 기본으로 설치된 모듈과 패키지, 내장 함수를 묶어서 파이썬 표준 라이브러리(Python Standard Library, PSL)라 부릅니다.


[import]
모듈은 import 키워드로 가져올 수 있습니다(모듈을 여러 개 가져올 때는 모듈을 콤마로 구분).
▶︎ import 모듈
    ▶︎▶︎ import 모듈1, 모듈2
    ▶︎▶︎ 모듈.변수
    ▶︎▶︎ 모듈.함수()
    ▶︎▶︎ 모듈.클래스()

[import as]
import as를 사용하여 모듈의 이름을 지정할 수 있습니다. 별명같은 개념임.
▶︎ import 모듈 as 이름

[from import]
from import를 사용하여 모듈의 일부 기능만 가져올 수 있다.
▶︎ from 모듈 import 변수
▶︎ from 모듈 import 함수
▶︎ from 모듈 import 클래스
    ▶︎▶︎ from 모듈 import 변수, 함수, 클래스

콤마로 구분하여 여러 개의 기능들을 가져올 수 있는데, 만약 수십 개가 필요하다면 입력하기 힘들다.
이때! '*'를 통해 모듈의 모든 변수, 함수, 클래스를 가져올 수 있다.
▶︎ from 모듈 import *
import와 마찬가지로 모든 기능을 사용할 수 있지만 기능 앞에 '모듈.'이 없어도 된다.

[from import as]
모듈의 일부를 가져온 뒤 이름 지정할 수 있다.
▶︎ from 모듈 import 변수 as 이름
▶︎ from 모듈 import 함수 as 이름
▶︎ from 모듈 import 클래스 as 이름

그럼 여러 개를 가져왔을 때 각각 이름을 지정할 수는 없을까요? 이때는 각 변수, 함수, 클래스 등을 콤마로 구분하여 as를 여러 개 지정하면 됩니다.
▶︎ from 모듈 import 변수 as 이름1, 함수 as 이름2, 클래스 as 이름3

[참고 | 가져온 모듈 해제하기, 다시 가져오기]
import로 가져온 모듈(변수, 함수, 클래스)은 del로 해제할 수 있습니다.
모듈을 다시 가져오려면 importlib.reload를 사용합니다.
>>> import importlib
>>> import math
>>> importlib.reload(math)


[import로 패키지 가져오기]
패키지에 들어있는 모듈도 import를 사용하여 가져옵니다.
▶︎ import 패키지
▶︎ import 패키지.모듈
▶︎ import 패키지.모듈1, 패키지.모듈2
    패키지.모듈.변수
    패키지.모듈.함수()
    패키지.모듈.클래스()


[import as로 패키지 모듈 이름 지정]
패키지 이름에 모듈 이름까지 더하면 상당히 길어지는데 import as를 사용하면 코드가 더 간단해진다.
▶︎ import 패키지.모듈 as 이름


[from import로 패키지의 모듈에서 일부만 가져오기]
▶︎ from 패키지.모듈 import 변수
▶︎ from 패키지.모듈 import 함수
▶︎ from 패키지.모듈 import 클래스
▶︎ from 패키지.모듈 import 변수, 함수, 클래스

패키지의 모듈에서 모든 변수, 함수, 클래스를 가져오는 방법
▶︎ from 패키지.모듈 import *


[from import로 패키지의 모듈의 일부를 가져온 뒤 이름 지정]
▶︎ from 패키지.모듈 import 변수 as 이름
▶︎ from 패키지.모듈 import 변수 as 이름, 함수 as 이름, 클래스 as 이름



파이썬은 파이썬 표준 라이브러리(Python Standard Library, PSL) 이외에도 
파이썬 패키지 인덱스(Python Package Index, PyPI)를 통해 다양한 패키지를 사용할 수 있습니다.
특히 명령만 입력하면 원하는 패키지를 인터넷에서 다운로드하여 설치해줄 뿐만 아니라 관련된 패키지(의존성)까지 자동으로 설치해주므로 매우 편리합니다.


[pip로 패키지 설치]
▶︎ pip install 패키지
또는, python에 -m 옵션을 지정해서 pip를 실행할 수도 있습니다. -m 옵션은 모듈을 실행하는 옵션이며 pip도 모듈입니다.
▶︎ python -m pip install 패키지


[참고 | pip와 파이썬 버전]
보통 리눅스와 macOS에서는 파이썬 버전 2와 3와 함께 설치된 경우가 많습니다.
그래서 파이썬 실행 파일을 python, python3와 같이 구분하죠. 
마찬가지로 pip도 파이썬 버전을 붙이고 있으며 파이썬 버전에 맞게 사용해야 합니다(다른 버전에 설치된 패키지는 가져와서 사용할 수 없습니다).
▶︎ 파이썬 3에서는 pip 또는 pip3 명령을 사용하여 패키지를 설치!

[참고 | 패키지 검색, 버전 지정, 목록 출력, 삭제]
pip search 패키지: 패키지 검색

pip install 패키지==버전: 특정 버전의 패키지를 설치(예: pip install requests==2.9.0)

pip list 또는 pip freeze: 패키지 목록 출력

pip uninstall 패키지: 패키지 삭제