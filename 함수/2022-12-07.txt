Date. 2022/12/07

함수(function) : 특정 용도의 코드를 한 곳에 모아 놓은 것.

함수의 장점
- 코드의 용도를 구분할 수 있음.
- 코드를 재사용할 수 있음.
- 따라서 실수가 줄어듬.


일반적/기본적인 함수 선언)

    def 함수이름():
        코드

    - 빈 함수는 코드부분에 pass를 넣으면 됨.

함수 호출)  함수이름()


** [함수를 만들고 호출할 때 주의할 점] **
함수를 만들기 전에 함수를 먼저 호출하면 안된다.
왜냐하면 파이썬 코드는 위에서 아래로 순차적으로 실행되기 때문.

- 함수에서 값을 받으려면?
    함수 선언문 ( )(괄호) 안에 변수 이름을 지정. 
    이 변수를 매개변수(parameter)라 한다. ( 함수를 호출할 때 넣는 값을 인수(argument) )
- 함수에서 값을 꺼내 올려면?
    함수 안에서 return을 사용하면 값을 함수 바깥으로 반환합니다(return에 값을 지정하지 않으면 None을 반환).
    return은 값을 반환하는 기능뿐만 아니라 함수 중간에서 바로 빠져나오는 기능도 있다. 
- 함수에서 값을 여러 개 반환하는 방법
    return에 값이나 변수를 ,(콤마)로 구분해서 지정. (실제로는 튜플이 반환)
    ** 튜플의 언패킹 덕분에 변수끼리의 스왑이 간편함! **

참고) 함수 독스트링 사용법
함수의 :(콜론) 바로 다음 줄에 """ """(큰따옴표 세 개)로 문자열을 입력하면 
함수에 대한 설명을 넣을 수 있습니다.
이런 방식의 문자열을 독스트링(문서화 문자열, documentation strings, docstrings)
독스트링의 윗줄에 다른 코드가 오면 안 됩니다.

- help(객체) # 이거 꽤 유용할수도!?
help에 함수를 넣으면 함수의 이름, 매개변수, 독스트링을 도움말 형태로 출력.


(https://dojang.io/mod/page/view.php?id=2341, 필수 개념!) -> 핵심 : 함수는 스택(stack) 방식으로 호출.
즉, 함수를 호출하면 스택의 아래쪽 방향으로 함수가 추가되고 함수가 끝나면 위쪽 방향으로 사라집니다.

프레임 : 메모리에서 함수와 함수에 속한 변수가 저장되는 독립적인 공간.
** 프레임은 스택 안에 있어서 각 프레임을 스택 프레임이라고 부릅니다. **
** 전역 프레임은 파이썬 스크립트 전체에서 접근할 수 있어서 전역 프레임이라 부릅니다. ** 
** 전역 프레임은 스크립트 파일의 실행이 끝나면 사라집니다. **