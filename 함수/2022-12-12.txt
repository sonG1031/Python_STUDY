Date. 2022/12/12


위치 인수(positional argument): 함수에 인수를 순서대로 넣는 방식


[인수에 언패킹 사용]
위치 인수 방식일때 리스트 또는 튜플을 언패킹하여 인수를 넣을 수 있다.
단, 함수의 매개변수 개수와 리스트 또는 튜플의 요소 개수는 같아야 한다.
- 함수(*리스트)
- 함수(*튜플)


가변 인수(variable argument) : 매개변수 앞에 *를 붙임. 가변인수는 튜플형임.
def 함수이름(*매개변수):
    코드


[고정 인수와 가변 인수를 함께 사용]
고정 매개변수를 먼저 지정하고, 그 다음 매개변수에 *를 붙여야함.
즉, 가변 인수가 고정 인수보다 앞에 있으면 안됨.


키워드 인수(keyword argument) : 인수에 이름(키워드)을 붙이는 기능인데 키워드=값 형식으로 사용.
키워드 인수를 사용하면 인수의 순서를 맞추지 않아도 키워드에 해당하는 값이 들어가므로 편리함.
- 함수(키워드=값)


[딕셔너리 언패킹 사용]
키워드 인수로 값을 넣을때 딕셔너리를 인수로 넣을 수 있음.
단, 함수의 매개변수 이름과 딕셔너리의 키 이름이 같아야하고, 매개변수 개수와 딕셔너리 키의 개수도 같아야함.
- 함수(**딕셔너리)
- **를 두 번 사용하는 이유 : 딕셔너리는 키-값 쌍 형태로 값이 저장되어 있기 때문.
  인수로 "*딕셔너리"를 넣으면 딕셔너리의 키만 인수로 들어간다. 즉, 한 번 언패킹하면 키를 사용한다는 뜻.
  따라서 **처럼 두 번 언패킹하여 값을 사용하도록 만들어야함.


[키워드 인수를 사용하는 가변 인수 함수]
def 함수이름(**매개변수):
    코드
- 인수를 직접 넣어도 되고, 딕셔너리 언패킹을 사용해도 됨.


[고정 인수와 가변 인수(키워드 인수)를 함께 사용]
고정 매개변수를 먼저 지정하고, 그 다음 매개변수에 **를 붙여주어야함.
즉, 고정 매개변수보다 키워드 인수가 앞에 오면 안됨.

[위치 인수와 키워드 인수를 함께 사용]
함수에서 위치 인수를 받는 *args와 키워드 인수를 받는 **kwargs를 함께 사용할 수도 있다.
대표적인 함수가 print인데 print는 출력할 값을 위치 인수로 넣고 sep, end 등을 키워드 인수로 넣기 때문.
단, 매개변수 순서에서 키워드 인수가 가장 뒤쪽에 와야함.


[매개변수 기본값]
def 함수이름(매개변수=값):
    코드
초깃값이 지정되어 있더라도 값을 넣으면 해당 값이 전달됨.
단, 초깃값이 지정된 매개변수 다음에는 초깃값이 없는 매개변수가 올 수 없음.
즉, 초깃값이 지정된 매개변수는 뒤쪽에 몰아주면됨.